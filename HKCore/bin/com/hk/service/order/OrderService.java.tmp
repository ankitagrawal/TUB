package com.hk.service.order;

import java.util.List;
import java.util.Set;

import com.akube.framework.dao.Page;
import com.hk.constants.order.EnumOrderLifecycleActivity;
import com.hk.domain.catalog.product.ProductVariant;
import com.hk.domain.core.CancellationType;
import com.hk.domain.core.OrderLifecycleActivity;
import com.hk.domain.order.Order;
import com.hk.domain.order.ShippingOrder;
import com.hk.domain.user.User;
import com.hk.exception.OrderSplitException;
import com.hk.search.OrderSearchCriteria;

public interface OrderService {

    public Order save(Order order);

    public Order find(Long orderId);

    public Long getCountOfOrdersWithStatus();

    public Page<Order> searchOrders(OrderSearchCriteria orderSearchCriteria, int pageNo, int perPage);

    public List<Order> searchOrders(OrderSearchCriteria orderSearchCriteria);

    public Set<ShippingOrder> createShippingOrders(Order order);

    public Order putOrderOnHold(Order order);

    public Order unHoldOrder(Order order);

    public void processOrderForAutoEsclationAfterPaymentConfirmed(Order order);

    public Order escalateOrderFromActionQueue(Order order, String shippingOrderGatewayId);

    public Order getLatestOrderForUser(User user);

    public Page<Order> listOrdersForUser(User user, int page, int perPage);

    /**
     * @param order
     * @return set of shipping orders which are split/derived from a base order
     * @throws OrderSplitException
     */

    public Set<ShippingOrder> splitOrder(Order order) throws OrderSplitException;

    public void cancelOrder(Order order, CancellationType cancellationType, String cancellationRemark, User loggedOnUser);

    public void approvePendingRewardPointsForOrder(Order order);

    public void sendEmailToServiceProvidersForOrder(Order order);

    public OrderLifecycleActivity getOrderLifecycleActivity(EnumOrderLifecycleActivity enumOrderLifecycleActivity);

    public void logOrderActivity(Order order, EnumOrderLifecycleActivity enumOrderLifecycleActivity);

    public void logOrderActivityByAdmin(Order order, EnumOrderLifecycleActivity enumOrderLifecycleActivity, String comments);

    public void logOrderActivity(Order order, User user, OrderLifecycleActivity orderLifecycleActivity, String comments);
    
    public ProductVariant getTopDealVariant(Order order) ;

}
