package com.hk.domain.order;

// Generated 10 Mar, 2011 5:37:39 PM by Hibernate Tools 3.2.4.CR1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import com.akube.framework.gson.JsonSkip;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;

/**
 * ProductOption generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "cart_line_item_extra_option")
public class CartLineItemExtraOption implements java.io.Serializable {

  @Id
  @GeneratedValue(strategy = GenerationType.AUTO)
  @Column(name = "id", unique = true)
  private Long id;

  @Column(name = "name", nullable = false, length = 45)
  private String name;

  @Column(name = "value", length = 45)
  private String value;

  @JsonSkip
  @ManyToOne(fetch = FetchType.LAZY)
  @JoinColumn(name = "cart_line_item_id")
  private CartLineItem cartLineItem;

  public CartLineItemExtraOption() {
  }

  public CartLineItemExtraOption(String name, String value) {
    this.name = name;
    this.value = value;
  }

  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public String getName() {
    return this.name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public String getValue() {
    return this.value;
  }

  public void setValue(String value) {
    this.value = value;
  }

  public CartLineItem getCartLineItem() {
    return cartLineItem;
  }

  public void setCartLineItem(CartLineItem cartLineItem) {
    this.cartLineItem = cartLineItem;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) return true;

    if ((o instanceof CartLineItemExtraOption)) {
      CartLineItemExtraOption cartLineItemExtraOption = (CartLineItemExtraOption) o;
      if (this.id != null && cartLineItem.getId() != null && this.id.equals(cartLineItem.getId()) ) {
        return true;
      } else {
        EqualsBuilder equalsBuilder = new EqualsBuilder();
        equalsBuilder.append(this.getName(), cartLineItemExtraOption.getName()).append(this.getValue(), cartLineItemExtraOption.getValue());
        return equalsBuilder.isEquals();
      }
    }

    return false;
  }

  @Override
  public int hashCode() {
    if (this.id != null) {
      return new HashCodeBuilder().append(this.id).toHashCode();
    } else {
      HashCodeBuilder hashCodeBuilder = new HashCodeBuilder();
      hashCodeBuilder.append(this.getName()).append(this.getValue());
      return hashCodeBuilder.toHashCode();
    }
  }
}