package com.hk.domain.sku;

// Generated Oct 4, 2011 9:25:12 PM by Hibernate Tools 3.2.4.CR1

import com.akube.framework.gson.JsonSkip;
import com.hk.domain.inventory.Bin;

import javax.persistence.*;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * SkuItem generated by hbm2java
 */
@Entity
@Table(name = "sku_item")
/* @Cache(usage = CacheConcurrencyStrategy.READ_WRITE) */
public class SkuItem implements java.io.Serializable, Comparable<SkuItem> {

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "id", unique = true, nullable = false)
	private Long id;

	@JsonSkip
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "sku_group_id", nullable = false)
	private SkuGroup skuGroup;

	@Column(name = "barcode", length = 45)
	private String barcode;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_date", nullable = false, length = 19)
	private Date createDate;

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "sku_item_status_id", nullable = false)
	private SkuItemStatus skuItemStatus;

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "sku_item_owner_id", nullable = false)
	private SkuItemOwner skuItemOwner;


	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "bin_id")
	private Bin bin;

	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public SkuGroup getSkuGroup() {
		return this.skuGroup;
	}

	public void setSkuGroup(SkuGroup skuGroup) {
		this.skuGroup = skuGroup;
	}

	public String getBarcode() {
		return this.barcode;
	}

	public void setBarcode(String barcode) {
		this.barcode = barcode;
	}

	public Date getCreateDate() {
		return createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	public SkuItemStatus getSkuItemStatus() {
		return skuItemStatus;
	}

	public void setSkuItemStatus(SkuItemStatus skuItemStatus) {
		this.skuItemStatus = skuItemStatus;
	}

	public SkuItemOwner getSkuItemOwner() {
		return skuItemOwner;
	}

	public void setSkuItemOwner(SkuItemOwner skuItemOwner) {
		this.skuItemOwner = skuItemOwner;
	}

	public int compareTo(SkuItem skuItem) {
		if (this.getId() < skuItem.getId())
			return -1;
		if (this.getId() > skuItem.getId())
			return 1;
		return 0;
	}

	@Override
	public boolean equals(Object o) {
		if (this == o) {
			return true;
		}
		if (!(o instanceof SkuItem)) {
			return false;
		}
		SkuItem skuItem = (SkuItem) o;

		if (this.id != null && skuItem.getId() != null) {
			return this.id.equals(skuItem.getId());
		}
		return false;
	}

	public Bin getBin() {
		return bin;
	}

	public void setBin(Bin bin) {
		this.bin = bin;
	}
	
	

}