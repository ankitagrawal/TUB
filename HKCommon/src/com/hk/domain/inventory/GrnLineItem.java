package com.hk.domain.inventory;
// Generated Dec 15, 2011 3:32:41 PM by Hibernate Tools 3.2.4.CR1


import com.hk.domain.accounting.PoLineItem;
import com.hk.domain.catalog.product.ProductVariant;
import com.hk.domain.sku.Sku;

import javax.persistence.*;
import java.util.List;

/**
 * GrnLineItem generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "grn_line_item", uniqueConstraints = @UniqueConstraint(columnNames = {"goods_received_note_id", "sku_id"}))
public class GrnLineItem implements java.io.Serializable {


	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "id", unique = true, nullable = false)
	private Long id;

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "goods_received_note_id", nullable = false)
	private GoodsReceivedNote goodsReceivedNote;

	@Column(name = "qty", nullable = false)
	private Long qty;

	@Column(name = "cost_price", nullable = false, precision = 8)
	private Double costPrice;

	@Column(name = "mrp", nullable = false, precision = 8)
	private Double mrp;

	@Column(name = "taxable_amount")
	private Double taxableAmount;

	@Column(name = "tax_amount")
	private Double taxAmount;

	@Column(name = "discount_percent")
	private Double discountPercent;

	@Column(name = "surcharge_amount")
	private Double surchargeAmount;

	@Column(name = "payable_amount")
	private Double payableAmount;

	@Column(name = "procurement_price")
	private Double procurementPrice;

	@Transient
	private ProductVariant productVariant;

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "sku_id", nullable = false)
	private Sku sku;

	@Column(name = "checkedin_qty")
	private Long checkedInQty;

	@Transient
	private Long poLineItemQty;

	@Transient
	private Long grnLineItemQtyAlreadySet;


	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public GoodsReceivedNote getGoodsReceivedNote() {
		return this.goodsReceivedNote;
	}

	public void setGoodsReceivedNote(GoodsReceivedNote goodsReceivedNote) {
		this.goodsReceivedNote = goodsReceivedNote;
	}

	public Long getQty() {
		return this.qty;
	}

	public void setQty(Long qty) {
		this.qty = qty;
	}

	public Double getCostPrice() {
		return this.costPrice;
	}

	public void setCostPrice(Double costPrice) {
		this.costPrice = costPrice;
	}

	public Double getMrp() {
		return this.mrp;
	}

	public void setMrp(Double mrp) {
		this.mrp = mrp;
	}

	public ProductVariant getProductVariant() {
		return productVariant;
	}

	public void setProductVariant(ProductVariant productVariant) {
		this.productVariant = productVariant;
	}

	public Long getCheckedInQty() {
		return checkedInQty != null ? checkedInQty : 0L;
	}

	public void setCheckedInQty(Long checkedInQty) {
		this.checkedInQty = checkedInQty;
	}

	public Sku getSku() {
		return sku;
	}

	public void setSku(Sku sku) {
		this.sku = sku;
	}

	public Double getTaxableAmount() {
		return taxableAmount;
	}

	public void setTaxableAmount(Double taxableAmount) {
		this.taxableAmount = taxableAmount;
	}

	public Double getTaxAmount() {
		return taxAmount;
	}

	public void setTaxAmount(Double taxAmount) {
		this.taxAmount = taxAmount;
	}

	public Double getSurchargeAmount() {
		return surchargeAmount;
	}

	public void setSurchargeAmount(Double surchargeAmount) {
		this.surchargeAmount = surchargeAmount;
	}

	public Double getPayableAmount() {
		return payableAmount;
	}

	public void setPayableAmount(Double payableAmount) {
		this.payableAmount = payableAmount;
	}

	public Double getDiscountPercent() {
		return discountPercent;
	}

	public void setDiscountPercent(Double discountPercent) {
		this.discountPercent = discountPercent;
	}

	public Double getProcurementPrice() {
		return procurementPrice;
	}

	public void setProcurementPrice(Double procurementPrice) {
		this.procurementPrice = procurementPrice;
	}

	public Long getPoLineItemQty() {
		List<PoLineItem> poLineItemList = this.getGoodsReceivedNote().getPurchaseOrder().getPoLineItems();
		for(PoLineItem poLineItem : poLineItemList) {
			if(this.sku.getId().equals(poLineItem.getSku().getId())) {
				return poLineItem.getQty();
			}
		}
		return null;
	}

	public void setPoLineItemQty(Long poLineItemQty) {
		this.poLineItemQty = poLineItemQty;
	}

	public Long getGrnLineItemQtyAlreadySet() {
		long grnLineItemQtyAlreadySet = 0;
		List<GoodsReceivedNote> allGrnForThisPO = this.getGoodsReceivedNote().getPurchaseOrder().getGoodsReceivedNotes();
		for(GoodsReceivedNote goodsReceivedNote : allGrnForThisPO) {
			if( !goodsReceivedNote.getId().equals(this.getGoodsReceivedNote().getId()) ) {
				for(GrnLineItem grnLineItemForOtherGrn : goodsReceivedNote.getGrnLineItems()) {
					if(this.getSku().getId().equals(grnLineItemForOtherGrn.getSku().getId())) {
						grnLineItemQtyAlreadySet += grnLineItemForOtherGrn.getQty().longValue();
					}
				}

			}
		}
		return grnLineItemQtyAlreadySet;
	}

	public void setGrnLineItemQtyAlreadySet(Long grnLineItemQtyAlreadySet) {
		this.grnLineItemQtyAlreadySet = grnLineItemQtyAlreadySet;
	}
}


