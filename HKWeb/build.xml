<project name="HK Web" basedir="." default="build">

	<property file="build.properties" />
	<property file="${project.base.dir}/environmentLocator.properties" />

	<path id="compile.classpath">
		<fileset file="${lib.root.dir}/commons/commons-lang-2.1.jar" />
		<fileset file="${lib.root.dir}/logger/slf4j-log4j12-1.5.10.jar" />
		<fileset file="${lib.root.dir}/logger/slf4j-api-1.5.10.jar" />
		<fileset file="${lib.root.dir}/logger/log4j-1.2.13.jar" />
		<fileset file="${lib.root.dir}/rest/jaxrs-api-2.3.0.GA.jar" />
		<fileset file="${lib.root.dir}/spring/org.springframework.core-3.0.2.RELEASE.jar" />
		<fileset file="${lib.root.dir}/spring/org.springframework.web-3.0.2.RELEASE.jar" />
		<fileset file="${lib.root.dir}/spring/org.springframework.beans-3.0.2.RELEASE.jar" />
		<fileset file="${lib.root.dir}/spring/org.springframework.orm-3.0.2.RELEASE.jar" />
		<fileset file="${lib.root.dir}/spring/org.springframework.transaction-3.0.2.RELEASE.jar" />
		<fileset file="${lib.root.dir}/spring/org.springframework.context-3.0.2.RELEASE.jar" />
		<fileset file="${project.common.dir}/dependencies/javaee.jar" />
		<fileset file="${lib.root.dir}/stripes/stripes-1.5.3-patched.jar" />
		<fileset file="${lib.root.dir}/rest/resteasy-jaxrs-2.3.0.GA.jar" />
		<fileset file="${lib.root.dir}/thirdParty/poi-3.6-20091214.jar" />
		<fileset file="${lib.root.dir}/commons/commons-httpclient-3.0.1.jar" />
		<fileset file="${lib.root.dir}/commons/commons-io-1.4.jar" />
		<fileset file="${lib.root.dir}/solr/apache-solr-solrj-3.3.0.jar" />
		<fileset file="${lib.root.dir}/facebook/restfb-1.6.8.jar" />
		<fileset file="${lib.root.dir}/facebook/facebook-java-api-3.0.2.jar" />
		<fileset file="${lib.root.dir}/barcode/barcode4j.jar" />
		<fileset file="${lib.root.dir}/thirdParty/TechProUtil.jar" />
		<fileset file="${lib.root.dir}/thirdParty/metadata-extractor-2.5.0-RC1.jar" />
		<fileset file="${lib.root.dir}/thirdParty/core-renderer-R8pre2.jar" />
		<fileset file="${lib.root.dir}/thirdParty/joda-time-1.6.jar" />
		<fileset file="${lib.root.dir}/rest/jackson-core-lgpl-1.4.2.jar" />
		<fileset file="${lib.root.dir}/rest/jaxrs-api-2.3.0.GA.jar" />
		<fileset file="${lib.root.dir}/thirdParty/shiro-all-1.0-incubating-SNAPSHOT.jar" />
		<fileset file="${lib.root.dir}/hibernate/hibernate-annotations-3.4.0.GA.jar" />
		<fileset file="${lib.root.dir}/hibernate/hibernate-core-3.3.1.GA.jar" />
		<fileset file="${lib.root.dir}/itext/itext-1.4.8.jar" />
		<fileset file="${lib.root.dir}/thirdParty/jsoup-1.6.1.jar" />
		<fileset file="${lib.root.dir}/thirdParty/testng-5.8-jdk15.jar" />
		<fileset file="${lib.root.dir}/thirdParty/recaptcha4j-0.0.7.jar" />
		<fileset file="${lib.root.dir}/citrus/SFA-1.2.jar" />
		<fileset file="${project.common.dir}/dependencies/groovy-all-1.5.6.jar" />
		<fileset file="${project.common.dir}/dependencies/javaee.jar" />
		<fileset file="${project.common.dir}/dependencies/testng-5.8-jdk15.jar" />
		<fileset file="${lib.root.dir}/thirdParty/gson-1.4.jar" />
		<fileset file="${lib.root.dir}/thirdParty/antisamy-bin.1.3.jar" />
		<fileset file="${lib.root.dir}/thirdParty/jets3t-0.8.1.jar" />
		<fileset file="${project.common.dir}/dist/hk-common.jar" />
		<fileset file="${project.core.dir}/dist/hk-core.jar" />
		<fileset file="${project.admin.core.dir}/dist/hk-admin-core.jar" />
		<fileset file="${project.report.dir}/dist/hk-report.jar" />
    <fileset file="${lib.root.dir}/thirdParty/jdom-1.0.jar" />
  </path>


	<!-- Copy any resource or configuration files -->
	<target name="copyresources">
		<copy todir="${package.target.dir}" includeEmptyDirs="no">
			<fileset dir="${project.src.dir}">
				<patternset>
					<include name="**/*.conf" />
					<include name="**/*.properties" />
					<include name="**/*.xml" />
					<exclude name="**/*.java" />
				</patternset>
			</fileset>
		</copy>

	</target>

	<target name="build.dependencies" depends="dependencies.check,build.common,build.core,build.admin.core,build.report" />
	<target name="dependencies.check">
		<condition property="build.common.available">
			<available file="${project.hkcommon}/dist/hk-common.jar" />
		</condition>
	</target>

	<target name="build.common" unless="build.common.available">
		<ant dir="${project.common.dir}" target="build" inheritall="false">
			<property name="build.env" value="${build.env}" />
		</ant>
	</target>

	<target name="build.core" unless="build.common.available">
		<ant dir="${project.core.dir}" target="build" inheritall="false">
			<property name="build.env" value="${build.env}" />
		</ant>
	</target>

	<target name="build.admin.core" unless="build.common.available">
		<ant dir="${project.admin.core.dir}" target="build" inheritall="false">
			<property name="build.env" value="${build.env}" />
		</ant>
	</target>

	<target name="build.report" unless="build.common.available">
		<ant dir="${project.report.dir}" target="build" inheritall="false">
			<property name="build.env" value="${build.env}" />
		</ant>
	</target>

	<target name="compile" depends="prepare,build.dependencies,copyresources">
		<javac srcdir="src" destdir="${package.target.dir}" debug="true" debuglevel="lines,vars,source" source="1.5" deprecation="false" nowarn="true">
			<classpath refid="compile.classpath" />
			<compilerarg value="-Xlint">
			</compilerarg>
		</javac>
	</target>
	<target name="build.env.check">
		<condition property="build.env.prod">
			<equals arg1="${build.env}" arg2="prod" />
		</condition>
	</target>

	<taskdef name="groovyc" classname="org.codehaus.groovy.ant.Groovyc" classpathref="compile.classpath" />

	<target name="compile.groovy" depends="prepare" description="Compile Java classes for project">
		<groovyc srcdir="src" destdir="${package.target.dir}" fork="true" listfiles="true">
			<classpath refid="compile.classpath" />
			<javac debug="${compiler.debug}">
			</javac>
		</groovyc>

	</target>


	<!--<target name="build" depends="compile,build.exploded" description="build production WAR">
		<jar destfile="${project.dist.dir}/${package.jar.name}">
			<zipfileset dir="${package.target.dir}" includes="**/**" excludes="test/**/**" />
		</jar>
	</target>-->

	<target name="build" depends="compile,compile.groovy" description="build production WAR">
		<mkdir dir="${project.dist.dir}/WEB-INF" />
		<mkdir dir="${project.dist.dir}/WEB-INF/classes" />
		<mkdir dir="${project.dist.dir}/WEB-INF/classes/spring" />
		<copy todir="${project.dist.dir}">
			<fileset dir="${project.view.dir}">
				<include name="**/**" />
			</fileset>
		</copy>

		<!-- <copy todir="${project.dist.dir}/exploded/${package.war.name}/WEB-INF/lib">
		</copy> -->

		<copy todir="${project.dist.dir}/WEB-INF/classes">
			<fileset dir="${package.target.dir}" excludes="test/**/**" />
		</copy>
    <copy todir="${project.dist.dir}/WEB-INF/">
			<fileset dir="${project.web.dir}/WEB-INF" excludes="test/**/**" />
		</copy>
		<copy todir="${project.dist.dir}/WEB-INF/">
			<fileset dir="${project.resources.dir}/${project.env}/WEB-INF" excludes="test/**/**" />
		</copy>
		<!--<copy todir="${project.dist.dir}/WEB-INF/classes/spring">
			<fileset dir="${project.resources.dir}/spring" excludes="test/**/**" />
		</copy>-->
	</target>


	<!-- Remove classes directory for clean build -->
	<target name="clean" description="Prepare for clean build">
		<delete dir="${package.target.dir}" />
		<delete dir="${project.dist.dir}" />
		<delete dir="${package.reports.dir}" />
	</target>

	<!-- Check timestamp on files -->
	<target name="prepare">
		<mkdir dir="${project.dist.dir}" />
		<mkdir dir="${package.target.dir}" />
		<tstamp />
	</target>


</project>
