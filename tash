[1mdiff --git a/HKAdminCore/src/com/hk/admin/engine/CourierCostCalculatorImpl.java b/HKAdminCore/src/com/hk/admin/engine/CourierCostCalculatorImpl.java[m
[1mindex c52bafb..0788d1e 100644[m
[1m--- a/HKAdminCore/src/com/hk/admin/engine/CourierCostCalculatorImpl.java[m
[1m+++ b/HKAdminCore/src/com/hk/admin/engine/CourierCostCalculatorImpl.java[m
[36m@@ -74,42 +74,48 @@[m [mpublic class CourierCostCalculatorImpl implements CourierCostCalculator {[m
   }[m
 [m
   @SuppressWarnings("unchecked")[m
[31m-  public TreeMap<Courier, Long> getCourierCostingMap(String pincode, boolean cod, Warehouse srcWarehouse, Double amount, Double weight, boolean ground) {[m
[32m+[m[32m  public TreeMap<Courier, Long> getCourierCostingMap(String pincode, boolean cod, Warehouse srcWarehouse, Double amount,[m
[32m+[m[32m                                                     Double weight, boolean ground) {[m
     Pincode pincodeObj = pincodeDao.getByPincode(pincode);[m
     List<Courier> applicableCourierList = pincodeCourierService.getApplicableCouriers(pincodeObj, cod, ground, true);[m
     Double totalCost = 0D;[m
 [m
       if (pincodeObj == null || applicableCourierList == null || applicableCourierList.isEmpty()) {[m
[31m-          logger.error("Could not fetch applicable couriers while making courier costing map for pincode " + pincode + "cod " + cod + " ground " + ground);[m
[32m+[m[32m          logger.error("Could not fetch applicable couriers while making courier costing map for pincode " + pincode[m
[32m+[m[32m              + "cod " + cod + " ground " + ground);[m
           return new TreeMap<Courier, Long>();[m
       }[m
[31m-      List<PincodeRegionZone> sortedApplicableZoneList = pincodeRegionZoneService.getApplicableRegionList(applicableCourierList, pincodeObj, srcWarehouse);[m
[31m-      Map<Courier, Long> courierCostingMap = new HashMap<Courier, Long>();[m
[31m-      for (PincodeRegionZone pincodeRegionZone : sortedApplicableZoneList) {[m
[31m-          Set<Courier> couriers = courierGroupService.getCommonCouriers(pincodeRegionZone.getCourierGroup(), applicableCourierList);[m
[31m-          for (Courier courier : couriers) {[m
[31m-              if (EnumCourier.HK_Delivery.getId().equals(courier.getId())) {[m
[31m-                  if (pincodeObj.getNearestHub() != null) {[m
[31m-                      HKReachPricingEngine hkReachPricingEngine = courierPricingEngineDao.getHkReachPricingEngine(srcWarehouse, pincodeObj.getNearestHub(), false);[m
[31m-                      if(hkReachPricingEngine != null){[m
[31m-                          totalCost = shipmentPricingEngine.calculateHKReachCost(hkReachPricingEngine, weight, pincodeObj);[m
[31m-                      }[m
[31m-                  } else {[m
[31m-                    totalCost = 0d;[m
[31m-                  }[m
[31m-              } else {[m
[31m-                  CourierPricingEngine courierPricingInfo = courierPricingEngineDao.getCourierPricingInfo(courier, pincodeRegionZone.getRegionType(), srcWarehouse);[m
[31m-                  if (courierPricingInfo == null) {[m
[31m-                      continue;[m
[31m-                  }[m
[31m-                  totalCost = shipmentPricingEngine.calculateShipmentCost(courierPricingInfo, weight);[m
[31m-              }[m
[31m-              logger.debug("courier " + courier.getName() + "totalCost " + totalCost);[m
[31m-              courierCostingMap.put(courier, Math.round(totalCost));[m
[32m+[m[32m      List<PincodeRegionZone> sortedApplicableZoneList =[m
[32m+[m[32m                    pincodeRegionZoneService.getApplicableRegionList(applicableCourierList, pincodeObj, srcWarehouse);[m
[32m+[m[32m    Map<Courier, Long> courierCostingMap = new HashMap<Courier, Long>();[m
[32m+[m[32m    for (PincodeRegionZone pincodeRegionZone : sortedApplicableZoneList) {[m
[32m+[m[32m      Set<Courier> couriers = courierGroupService.getCommonCouriers(pincodeRegionZone.getCourierGroup(),[m
[32m+[m[32m          applicableCourierList);[m
[32m+[m[32m      for (Courier courier : couriers) {[m
[32m+[m[32m        if (EnumCourier.HK_Delivery.getId().equals(courier.getId())) {[m
[32m+[m[32m          if (pincodeObj.getNearestHub() != null) {[m
[32m+[m[32m            HKReachPricingEngine hkReachPricingEngine = courierPricingEngineDao.getHkReachPricingEngine(srcWarehouse,[m
[32m+[m[32m                pincodeObj.getNearestHub(), false);[m
[32m+[m[32m            if(hkReachPricingEngine != null){[m
[32m+[m[32m              totalCost = shipmentPricingEngine.calculateHKReachCost(hkReachPricingEngine, weight, pincodeObj);[m
[32m+[m[32m            }[m
[32m+[m[32m          } else {[m
[32m+[m[32m            totalCost = 0d;[m
           }[m
[32m+[m[32m        } else {[m
[32m+[m[32m          CourierPricingEngine courierPricingInfo = courierPricingEngineDao.getCourierPricingInfo(courier,[m
[32m+[m[32m              pincodeRegionZone.getRegionType(), srcWarehouse);[m
[32m+[m[32m          if (courierPricingInfo == null) {[m
[32m+[m[32m            continue;[m
[32m+[m[32m          }[m
[32m+[m[32m          totalCost = shipmentPricingEngine.calculateShipmentCost(courierPricingInfo, weight);[m
[32m+[m[32m        }[m
[32m+[m[32m        logger.debug("courier " + courier.getName() + "totalCost " + totalCost);[m
[32m+[m[32m        courierCostingMap.put(courier, Math.round(totalCost));[m
       }[m
[32m+[m[32m    }[m
 [m
[31m-      MapValueComparator mapValueComparator = new MapValueComparator(courierCostingMap);[m
[32m+[m[32m    MapValueComparator mapValueComparator = new MapValueComparator(courierCostingMap);[m
       TreeMap<Courier, Long> sortedCourierCostingTreeMap = new TreeMap(mapValueComparator);[m
       sortedCourierCostingTreeMap.putAll(courierCostingMap);[m
 [m
[36m@@ -118,7 +124,8 @@[m [mpublic class CourierCostCalculatorImpl implements CourierCostCalculator {[m
 [m
   public CourierPricingEngine getCourierPricingInfo(Courier courier, Pincode pincodeObj, Warehouse srcWarehouse) {[m
     CourierGroup courierGroup = courierGroupService.getCourierGroup(courier);[m
[31m-    PincodeRegionZone pincodeRegionZone = pincodeRegionZoneService.getPincodeRegionZone(courierGroup, pincodeObj, srcWarehouse);[m
[32m+[m[32m    PincodeRegionZone pincodeRegionZone = pincodeRegionZoneService.getPincodeRegionZone(courierGroup, pincodeObj,[m
[32m+[m[32m        srcWarehouse);[m
     if (pincodeRegionZone == null) {[m
       if (courierGroup == null) {[m
         logger.error("courier group not found for courier " + courier.getName());[m
